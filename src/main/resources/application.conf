test ={
  url = "jdbc:h2:mem:test1"
  driver = org.h2.Driver
  connectionPool = disabled
  keepAliveConnection = true
}

dev = {
  url="jdbc:mysql://172.16.240.1:3306/quant4s?user=root&password=root&useUnicode=true&characterEncoding=UTF8"
  driver=com.mysql.jdbc.Driver
  keepAliveConnection = true
}

quant4s {
  runMode = "dev"
  dataProviders: [{name:"SINA L1", path: "sina_l1", provider: "quanter.actors.provider.sina.SinaL1Actor"}]
//  dataProviders: [{name:"SINA L1", path: "sina_l1", provider: "quanter.actors.provider.sina.SinaL1Actor"},
//    {name:"CTP", path: "ctp", provider: "quanter.actors.provider.ctp.CTPDataProviderActor"},
//    {name: "历史数据日线",path:"history_data_of_day", provider: "quanter.actors.provider.csv.CsvDataProviderActor"}]

  chanelTypes = [{name:"CTP",title: "期货CTP: 连接期货公司提供的CTP接口", desc:"连接期货公司提供的CTP接口", driver: "quanter.actors.trade.ctp.CTPBrokerageActor"}]

//  ,
//{name: "SIM",title:"SIM: 仿真交易接口", desc:"仿真交易接口",driver: "quanter.brokerages.simulate.SimulateBrokerage"},
//{name: "T2",title:"T2: 恒生PB柜台", desc:"恒生PB柜台",driver: "quanter.brokerages.hensun.t2.T2Brokerage"}

  riskControllers = [{name: "股票黑名单", controller:"quanter.risk.BlankListRisk"}]

  chooseSecurity:[{name:"SMV", handler: "quanter.actors.securitySelection.SmallValueActor"}]
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"

  quartz {
    config {
      threadPool.threadCount = 3
      jobStore.class = "org.quartz.simpl.RAMJobStore"
    }
    jobs = [{name:"logjob", cron:"0/5 * * * * ?", clazz: "quanter.schedule.TestLogJob", trigger:"logjob", type:"normal"},
      {name:"testJob", cron:"0/3 * * * * ?", actorSelection:"/user/dpm/sina_l1", trigger:"testjob", type: "actor"}] // message 默认为new ExecuteJob()
  }
}
