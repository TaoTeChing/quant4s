test ={
  url = "jdbc:h2:mem:test1"
  driver = org.h2.Driver
  connectionPool = disabled
  keepAliveConnection = true
}

dev = {
  url="jdbc:mysql://192.168.174.101:3306/quant4s?user=root&password=root&useUnicode=true&characterEncoding=UTF8"
  driver=com.mysql.jdbc.Driver
  keepAliveConnection = true
}

quant4s {
  runMode = "dev"
  installDatabase = "install" // install | update | none
  dataProviders: [{name:"SINA L1", path: "sinal1", provider: "org.quant4s.mds.provider.sina.SinaL1Actor"}]

  chooseSecurity:[{name:"SMV", handler: "quanter.actors.securitySelection.SmallValueActor"}]
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  stdout-loglevel = "DEBUG"

  quartz {
    config {
      threadPool.threadCount = 3
      jobStore.class = "org.quartz.simpl.RAMJobStore"
    }

    jobs=[{name:"testJob", cron:"0/3 * * * * ?", actorSelection:"/user/data-provider-manager/sinal1", trigger:"testjob", type: "actor"}]
    //jobs = [{name:"logjob", cron:"0/5 * * * * ?", clazz: "quanter.schedule.TestLogJob", trigger:"logjob", type:"normal"},
    //  {name:"testJob", cron:"0/3 * * * * ?", actorSelection:"/user/dpm/sina_l1", trigger:"testjob", type: "actor"}] // message 默认为new ExecuteJob()
  }
}

# Properties for akka.kafka.ProducerSettings can be
# defined in this section or a configuration section with
# the same layout.
akka.kafka.producer {
  # Tuning parameter of how many sends that can run in parallel.
  parallelism = 100

  # How long to wait for `KafkaProducer.close`
  close-timeout = 60s

  # Fully qualified config path which holds the dispatcher configuration
  # to be used by the producer stages. Some blocking may occur.
  # When this value is empty, the dispatcher configured for the stream
  # will be used.
  use-dispatcher = "akka.kafka.default-dispatcher"

  # Properties defined by org.apache.kafka.clients.producer.ProducerConfig
  # can be defined in this configuration section.
  kafka-clients {
  }
}