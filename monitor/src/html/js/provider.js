var auth = angular.module('auth', ['ui.router']);
auth.provider('auth.helper', function () {
    this.$get = [
        '$window',
        '$uibModal',
        '$rootScope',
        '$log',
        function ($window, $uibModal, $rootScope, $log) {
            var ret = {
                setProfile: function() {
                    $log.log("[auth.helper.setProfile]获取个人资料")
                    var profile = {
                        username: '开源用户',
                        nickname: 'Leo',
                    };
                    $rootScope.$broadcast('event:got-profile', profile);
                },
            };
            return ret;
        }]
});

// 和服务器通讯的模块，行情数据，交易数据，交易接口，回测数据
var gm = angular.module('gmsdk',[]);
gm.provider('gmsdk.td', function(){
        this.$get = ['$http', function($http){
            var ret = {
                getBacktest: function (bid) {
                    return  $http.get(appInfo.host + '/backtests/' + bid)
                },
                deleteBacktest: function (bid) {
                    return $http.delete(appInfo.host + '/backtests/' + bid)
                },
                getAccounts: function() {
                    return $http.get(appInfo.host + "/account/list")
                },
                getAccount: function(account_id) {
                    return $http.get(appInfo.host + "/account/" + account_id)
                },
                insertAccount: function(account) {
                    return $http.post(appInfo.host + "/account",account)
                },
                updateAccount: function(account) {
                    return $http.put(appInfo.host + "/account/" + account.id, account)
                },
                deleteAccount: function(id) {
                    return $http.delete( appInfo.host + "/account/" + id)
                },
                getStrategies: function () {
                    return $http.get(appInfo.host + '/strategy/list')
                },
                getStrategy: function (strategy_id) {
                    return $http.get(appInfo.host + '/strategy/' + strategy_id)
                },
                updateStrategy: function (strategy) {
                    return $http.put(restAddr + 'strategy/' + strategy.strategy_id, strategy)
                },
                getPositions: function (strategy_id) {
                    return $http.get(appInfo.host + '/strategy/' + strategy_id + "/position")
                },
                setPositions: function(strategy_id, positions) {
                    return $http.put(appInfo.host + '/strategy/' + strategy_id + "/position", positions)
                },
                getIndicator: function (strategy_id) {
                    return $http.get(appInfo.host + '/strategy/' + strategy_id + '/indicators')
                },
                getIndicators: function (strategy_id, start_date, end_date) {
                  return $http.get(appInfo.host + '/strategy/indicators?strategy_id=' + strategy_id + '&start_date=' + start_date + '&end_date=' + end_date)
                },
                getLastNDailyIndicators: function (strategy_id, n) {
                  return $http.get(appInfo.host + '/strategy/' + strategy_id + '/last_n_dailyindicators/' + n)
                },
                getLastNOrder: function(strategy_id, n) {
                    return $http.get(appInfo.host + '/strategy/' + strategy_id + "/order/" + n)
                },
                getUnfinishedOrders: function(strategy_id) {
                    return $http.get(appInfo.host + '/strategy/' + strategy_id + "/unfinished_orders")
                },
                getLastNTransact: function(strategy_id,n) {
                    return $http.get(appInfo.host + '/strategy/' + strategy_id + "/trans/" + n)
                },
                getRiskConfig: function(strategy_id) {
                    return true;
                },
                setRiskConfig: function(strategy_id, risk) {
                },
                getBrokerChannelTypes: function() {
                    return $http.get(appInfo.host + "/config/brokerageChannelTypes")
                },
            };
            return ret;
        }];
    })
    .provider('gmsdk.md', function(){
        this.$get = ['$http', '$log', function($http, $log){
             var ret = {
                symbolTypeAhead: {},
                getSymbols: function () {
                    $log.log("[gmsdk.md.getSymbols]构建证券列表数据 ");
                    function _makeTypeAhead(data) {
                        var res = { };
                        data.forEach(function (datum) {
                            var symbol = datum.symbol.toUpperCase(),
                            sec_id = datum.sec_id.toUpperCase(),
                            sec_name = datum.sec_name.toUpperCase();
                            res[symbol] ? res[symbol].push(datum)  : res[symbol] = [datum],
                            res[sec_name] ? res[sec_name].push(datum)  : res[sec_name] = [datum],
                            pinyin.makePy(sec_name).forEach(function (abbr) {
                                abbr = abbr.toUpperCase(),
                                abbr !== sec_id && (res[abbr] ? res[abbr].push(datum)  : res[abbr] = [datum]);
                            });
                        });
                        return res;
                    }
                    if (!Object.keys(symbolTypeAhead).length && querySymbol === !1) {
                        querySymbol = true;
                        var lastTime = window.localStorage.instrumentsUpdateTime,
                        inst = window.localStorage.getItem('instruments'),
                        now = (new Date).getTime(),
                        aday = 43200000;
//                        if (lastTime && Math.abs(lastTime - now) < aday && inst) {
//                            inst = JSON.parse(window.localStorage.getItem('instruments')),
//                            symbolTypeAhead = _makeTypeAhead(inst);
//                        } else {
                            var sym_uri = restAddr + 'instruments';
                            $http.get(sym_uri).success(function (data) {
                                void 0 !== data.data && (window.localStorage.instruments = JSON.stringify(data.data), window.localStorage.instrumentsUpdateTime = (new Date).getTime(), symbolTypeAhead = _makeTypeAhead(data.data))
                            }).error(function () {
                                inst && (inst = JSON.parse(window.localStorage.getItem('instruments')), symbolTypeAhead = _makeTypeAhead(inst))
                            });
//                        }
                    }
                },
             };
             return ret;
        }];
    })
;

// 拼音模块
var pinyin = angular.module('pinyin', []);
pinyin.provider('pinyin', [
            function () {
              var strChineseFirstPY = '',
              oMultiDiff = {
                19969: 'DZ',
                19975: 'WM',
                19988: 'QJ',
                20048: 'YL',
                20056: 'SC',
                20060: 'NM',
                20094: 'QG',
                20127: 'QJ',
                20167: 'QC',
                20193: 'YG',
                20250: 'KH',
                20256: 'ZC',
                20282: 'SC',
                20285: 'QJG',
                20291: 'TD',
                20314: 'YD',
                20340: 'NE',
                20375: 'TD',
                20389: 'YJ',
                20391: 'CZ',
                20415: 'PB',
                20446: 'YS',
                20447: 'SQ',
                20857: 'ZC',
                20911: 'PF',
                20504: 'TC',
                20608: 'KG',
                20854: 'QJ',
                20985: 'AW',
                21032: 'PB',
                21048: 'XQ',
                21049: 'SC',
                21089: 'YS',
                21119: 'JC',
                21242: 'SB',
                21273: 'SC',
                21305: 'YP',
                21306: 'QO',
                21330: 'ZC',
                21333: 'SDC',
                21345: 'QK',
                21378: 'CA',
                21397: 'SC',
                21414: 'XS',
                21442: 'SC',
                21477: 'JG',
                21480: 'TD',
                21484: 'ZS',
                21494: 'YX',
                21505: 'YX',
                21512: 'HG',
                21523: 'XH',
                21537: 'PB',
                21542: 'PF',
                21549: 'KH',
                21571: 'E',
                21574: 'DA',
                21588: 'TD',
                21589: 'O',
                21618: 'ZC',
                21621: 'KHA',
                21632: 'ZJ',
                21654: 'KG',
                21679: 'LKG',
                21683: 'KH',
                21710: 'A',
                21719: 'YH',
                21734: 'WOE',
                21769: 'A',
                21780: 'WN',
                21804: 'XH',
                21834: 'A',
                21899: 'ZD',
                21903: 'RN',
                21908: 'WO',
                21939: 'ZC',
                21956: 'SA',
                21964: 'YA',
                21970: 'TD',
                22003: 'A',
                22031: 'JG',
                22040: 'XS',
                22060: 'ZC',
                22066: 'ZC',
                22079: 'MH',
                22129: 'XJ',
                22179: 'XA',
                22237: 'NJ',
                22244: 'TD',
                22280: 'JQ',
                22300: 'YH',
                22313: 'XW',
                22331: 'YQ',
                22343: 'YJ',
                22351: 'PH',
                22395: 'DC',
                22412: 'TD',
                22484: 'PB',
                22500: 'PB',
                22534: 'ZD',
                22549: 'DH',
                22561: 'PB',
                22612: 'TD',
                22771: 'KQ',
                22831: 'HB',
                22841: 'JG',
                22855: 'QJ',
                22865: 'XQ',
                23013: 'ML',
                23081: 'WM',
                23487: 'SX',
                23558: 'QJ',
                23561: 'YW',
                23586: 'YW',
                23614: 'YW',
                23615: 'SN',
                23631: 'PB',
                23646: 'ZS',
                23663: 'ZT',
                23673: 'YG',
                23762: 'TD',
                23769: 'ZS',
                23780: 'QJ',
                23884: 'QK',
                24055: 'XH',
                24113: 'DC',
                24162: 'ZC',
                24191: 'GA',
                24273: 'QJ',
                24324: 'NL',
                24377: 'TD',
                24378: 'QJ',
                24439: 'PF',
                24554: 'ZS',
                24683: 'TD',
                24694: 'WE',
                24733: 'LK',
                24925: 'TN',
                25094: 'ZG',
                25100: 'XQ',
                25103: 'XH',
                25153: 'PB',
                25170: 'PB',
                25179: 'KG',
                25203: 'PB',
                25240: 'ZS',
                25282: 'FB',
                25303: 'NA',
                25324: 'KG',
                25341: 'ZY',
                25373: 'WZ',
                25375: 'XJ',
                25384: 'A',
                25457: 'A',
                25528: 'SD',
                25530: 'SC',
                25552: 'TD',
                25774: 'ZC',
                25874: 'ZC',
                26044: 'YW',
                26080: 'WM',
                26292: 'PB',
                26333: 'PB',
                26355: 'ZY',
                26366: 'CZ',
                26397: 'ZC',
                26399: 'QJ',
                26415: 'ZS',
                26451: 'SB',
                26526: 'ZC',
                26552: 'JG',
                26561: 'TD',
                26588: 'JG',
                26597: 'CZ',
                26629: 'ZS',
                26638: 'YL',
                26646: 'XQ',
                26653: 'KG',
                26657: 'XJ',
                26727: 'HG',
                26894: 'ZC',
                26937: 'ZS',
                26946: 'ZC',
                26999: 'KJ',
                27099: 'KJ',
                27449: 'YQ',
                27481: 'XS',
                27542: 'ZS',
                27663: 'ZS',
                27748: 'TS',
                27784: 'SC',
                27788: 'ZD',
                27795: 'TD',
                27812: 'O',
                27850: 'PB',
                27852: 'MB',
                27895: 'SL',
                27898: 'PL',
                27973: 'QJ',
                27981: 'KH',
                27986: 'HX',
                27994: 'XJ',
                28044: 'YC',
                28065: 'WG',
                28177: 'SM',
                28267: 'QJ',
                28291: 'KH',
                28337: 'ZQ',
                28463: 'TL',
                28548: 'DC',
                28601: 'TD',
                28689: 'PB',
                28805: 'JG',
                28820: 'QG',
                28846: 'PB',
                28952: 'TD',
                28975: 'ZC',
                29100: 'A',
                29325: 'QJ',
                29575: 'SL',
                29602: 'FB',
                30010: 'TD',
                30044: 'CX',
                30058: 'PF',
                30091: 'YSP',
                30111: 'YN',
                30229: 'XJ',
                30427: 'SC',
                30465: 'SX',
                30631: 'YQ',
                30655: 'QJ',
                30684: 'QJG',
                30707: 'SD',
                30729: 'XH',
                30796: 'LG',
                30917: 'PB',
                31074: 'NM',
                31085: 'JZ',
                31109: 'SC',
                31181: 'ZC',
                31192: 'MLB',
                31293: 'JQ',
                31400: 'YX',
                31584: 'YJ',
                31896: 'ZN',
                31909: 'ZY',
                31995: 'XJ',
                32321: 'PF',
                32327: 'ZY',
                32418: 'HG',
                32420: 'XQ',
                32421: 'HG',
                32438: 'LG',
                32473: 'GJ',
                32488: 'TD',
                32521: 'QJ',
                32527: 'PB',
                32562: 'ZSQ',
                32564: 'JZ',
                32735: 'ZD',
                32793: 'PB',
                33071: 'PF',
                33098: 'XL',
                33100: 'YA',
                33152: 'PB',
                33261: 'CX',
                33324: 'BP',
                33333: 'TD',
                33406: 'YA',
                33426: 'WM',
                33432: 'PB',
                33445: 'JG',
                33486: 'ZN',
                33493: 'TS',
                33507: 'QJ',
                33540: 'QJ',
                33544: 'ZC',
                33564: 'XQ',
                33617: 'YT',
                33632: 'QJ',
                33636: 'XH',
                33637: 'YX',
                33694: 'WG',
                33705: 'PF',
                33728: 'YW',
                33882: 'SR',
                34067: 'WM',
                34074: 'YW',
                34121: 'QJ',
                34255: 'ZC',
                34259: 'XL',
                34425: 'JH',
                34430: 'XH',
                34485: 'KH',
                34503: 'YS',
                34532: 'HG',
                34552: 'XS',
                34558: 'YE',
                34593: 'ZL',
                34660: 'YQ',
                34892: 'XH',
                34928: 'SC',
                34999: 'QJ',
                35048: 'PB',
                35059: 'SC',
                35098: 'ZC',
                35203: 'TQ',
                35265: 'JX',
                35299: 'JX',
                35782: 'SZ',
                35828: 'YS',
                35830: 'E',
                35843: 'TD',
                35895: 'YG',
                35977: 'MH',
                36158: 'JG',
                36228: 'QJ',
                36426: 'XQ',
                36466: 'DC',
                36710: 'JC',
                36711: 'ZYG',
                36767: 'PB',
                36866: 'SK',
                36951: 'YW',
                37034: 'YX',
                37063: 'XH',
                37218: 'ZC',
                37325: 'ZC',
                38063: 'PB',
                38079: 'TD',
                38085: 'QY',
                38107: 'DC',
                38116: 'TD',
                38123: 'YD',
                38224: 'HG',
                38241: 'XTC',
                38271: 'ZC',
                38415: 'YE',
                38426: 'KH',
                38461: 'YD',
                38463: 'AE',
                38466: 'PB',
                38477: 'XJ',
                38518: 'YT',
                38551: 'WK',
                38585: 'ZC',
                38704: 'XS',
                38739: 'LJ',
                38761: 'GJ',
                38808: 'SQ',
                39048: 'JG',
                39049: 'XJ',
                39052: 'HG',
                39076: 'CZ',
                39271: 'XT',
                39534: 'TD',
                39552: 'TD',
                39584: 'PB',
                39647: 'SB',
                39730: 'LG',
                39748: 'TPB',
                40109: 'ZQ',
                40479: 'ND',
                40516: 'HG',
                40536: 'HG',
                40583: 'QJ',
                40765: 'YQ',
                40784: 'QJ',
                40840: 'YK',
                40863: 'QJG'
              },
              checkCh = function (ch) {
                var uni = ch.charCodeAt(0);
                return uni > 40869 || 19968 > uni ? ch : oMultiDiff[uni] ? oMultiDiff[uni] : strChineseFirstPY.charAt(uni - 19968)
              },
              mkRslt = function (arr) {
                for (var arrRslt = [
                  ''
                ], i = 0, len = arr.length; len > i; i++) {
                  var str = arr[i],
                  strlen = str.length;
                  if (1 == strlen) for (var k = 0; k < arrRslt.length; k++) arrRslt[k] += str;
                   else {
                    var tmpArr = arrRslt.slice(0);
                    arrRslt = [
                    ];
                    for (var k$__0 = 0; strlen > k$__0; k$__0++) {
                      for (var tmp = tmpArr.slice(0), j = 0; j < tmp.length; j++) tmp[j] += str.charAt(k$__0);
                      arrRslt = arrRslt.concat(tmp)
                    }
                  }
                }
                return arrRslt
              };
              this.makePy = function (str) {
                if ('string' != typeof str) throw new Error( - 1, '函数makePy需要字符串类型参数!');
                str = str.replace(/\s*/g, ''),
                str = str.replace('Ａ', 'A');
                for (var arrResult = [
                ], i = 0, len = str.length; len > i; i++) {
                  var ch = str.charAt(i);
                  arrResult.push(checkCh(ch))
                }
                return mkRslt(arrResult)
              },
              this.$get = [
                function () {
                  return this
                }
              ]
            }
          ]);


var SEC_TYPE_MAP = {
1: '股票',
2: '基金',
3: '指数',
4: '期货',
5: '期权'
};
var util = angular.module('util', []);
util.provider('util.typeahead', function() {
    this.$get=['$log', function($log) {
        var obj = {
            getDataSets: function (source, filterKey, filterValue) {
                $log.log("[util.typeahead.getDataSets]");
                return Object.keys(SEC_TYPE_MAP).map(function (key) {
                    return {
                        name: 'sec-type-' + key,
                        display: function (s) {
                            return s.sec_name
                        },
                        source: obj.getSymbolByAbbr(source, [filterKey, 'sec_type'],
                            [filterValue, key]),
                        limit: 3,
                        templates: {
                            header: '<div class="tt-group">' + SEC_TYPE_MAP[key] + '</div>',
                            suggestion: function (s) {
                                return '<p>' + s.sec_name + '<br/><small>' + s.exchange + '.' + s.sec_id + '</small></p>'
                            }
                        }
                    }
                })
            },
            getSymbolSuggestions: function(source, filterKey, filterValue) {
                $log.log("[util.typeahead.getSymbolSuggestions]");
                return obj.getSymbolByAbbr(source, filterKey, filterValue)
            },
            getSymbolByAbbr: function (source, filterKey, filterValue) {
                $log.log("[util.typeahead.getSymbolByAbbr]");
                return function (input /*, syncResults */) {
                    $log.log("[util.typeahead.getSymbolByAbbr.return]");
                    for (var objs = [], uniSymbols = [], LIMIT = filterKey ? 3 : 10, key = null, keys = Object.keys(source), i = 0; i < keys.length && objs.length < LIMIT; i++) {
                        key = keys[i];
                        key.includes(input.toUpperCase()) && source[key].forEach(function (symbolObj) {
                            var need = true;
                            if (filterKey && Array.isArray(filterKey))
                                for (var i = 0; i < filterKey.length; i++)
                                    filterKey[i] && (need = need && symbolObj[filterKey[i]] == '' + filterValue[i]);
                                filterKey && 'String' == typeof filterKey && (need = symbolObj[filterKey] == '' + filterValue),
                                - 1 === uniSymbols.indexOf(symbolObj.symbol) && need && (objs.push(symbolObj), uniSymbols.push(symbolObj.symbol))
                        });
                    }
                    return /*syncResults ? void syncResults(objs)  : */objs.splice(0, LIMIT);
                };
            },
            getFirstMapSymbol: function (source, resolve, fine) {
                $log.log("[util.typeahead.getFirstMapSymbol]");
                var dataSets = obj.getDataSets(source, 'is_active', 1);
                return function (evt) {
                    if (13 == evt.which) {
                        var symbol = dataSets.map(function (s) {
                            return s.source(evt.target.value, null, null)
                        }).map(function (l) {
                            return l.length > 0 ? l[0] : { }
                        }).filter(function (symObj) {
                            return symObj.hasOwnProperty('sec_type')
                        }).sort(function (a, b) {
                            return a.sec_type > b.sec_type
                        }).shift();

                        return symbol && 'function' == typeof resolve && resolve(symbol),
                        'function' == typeof fine && fine(),
                        symbol || { }
                    }
                }
            },
            getByExactSymbol: function (source, symbol) {
                  var ret = {
                  };
                  try {
                    ret = source[symbol][0]
                  } catch (e) {
                  }
                  return ret
                }
        };
        return obj;
    }]
})
;